/*******************************************************************************
 * Copyright 2017 Samsung Electronics All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 *******************************************************************************/

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Event.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "Event.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace ezmq {
class EventDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Event>
     _instance;
} _Event_default_instance_;
class ReadingDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Reading>
     _instance;
} _Reading_default_instance_;

namespace protobuf_Event_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[2];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, created_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, modified_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, origin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, pushed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, device_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, reading_),
  0,
  2,
  3,
  4,
  5,
  1,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Reading, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Reading, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Reading, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Reading, created_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Reading, modified_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Reading, origin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Reading, pushed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Reading, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Reading, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Reading, device_),
  0,
  4,
  5,
  6,
  7,
  1,
  2,
  3,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 12, sizeof(Event)},
  { 19, 32, sizeof(Reading)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_Event_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Reading_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "Event.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _Event_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Event_default_instance_);_Reading_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Reading_default_instance_);}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\013Event.proto\022\004ezmq\"\206\001\n\005Event\022\n\n\002id\030\001 \002("
      "\t\022\017\n\007created\030\002 \002(\003\022\020\n\010modified\030\003 \002(\003\022\016\n\006"
      "origin\030\004 \002(\003\022\016\n\006pushed\030\005 \002(\003\022\016\n\006device\030\006"
      " \002(\t\022\036\n\007reading\030\007 \003(\0132\r.ezmq.Reading\"\205\001\n"
      "\007Reading\022\n\n\002id\030\001 \002(\t\022\017\n\007created\030\002 \002(\003\022\020\n"
      "\010modified\030\003 \002(\003\022\016\n\006origin\030\004 \002(\003\022\016\n\006pushe"
      "d\030\005 \002(\003\022\014\n\004name\030\006 \002(\t\022\r\n\005value\030\007 \002(\t\022\016\n\006"
      "device\030\010 \002(\tB5\n#org.edgexfoundry.ezmq.pr"
      "otobufeventB\016EZMQProtoEvent"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 347);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Event.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_Event_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Event::kIdFieldNumber;
const int Event::kCreatedFieldNumber;
const int Event::kModifiedFieldNumber;
const int Event::kOriginFieldNumber;
const int Event::kPushedFieldNumber;
const int Event::kDeviceFieldNumber;
const int Event::kReadingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Event::Event()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Event_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ezmq.Event)
}
Event::Event(const Event& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      reading_(from.reading_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  device_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_device()) {
    device_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_);
  }
  ::memcpy(&created_, &from.created_,
    static_cast<size_t>(reinterpret_cast<char*>(&pushed_) -
    reinterpret_cast<char*>(&created_)) + sizeof(pushed_));
  // @@protoc_insertion_point(copy_constructor:ezmq.Event)
}

void Event::SharedCtor() {
  _cached_size_ = 0;
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&created_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pushed_) -
      reinterpret_cast<char*>(&created_)) + sizeof(pushed_));
}

Event::~Event() {
  // @@protoc_insertion_point(destructor:ezmq.Event)
  SharedDtor();
}

void Event::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Event::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Event::descriptor() {
  protobuf_Event_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Event_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Event& Event::default_instance() {
  protobuf_Event_2eproto::InitDefaults();
  return *internal_default_instance();
}

Event* Event::New(::google::protobuf::Arena* arena) const {
  Event* n = new Event;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Event::Clear() {
// @@protoc_insertion_point(message_clear_start:ezmq.Event)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reading_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*id_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!device_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*device_.UnsafeRawStringPointer())->clear();
    }
  }
  if (cached_has_bits & 60u) {
    ::memset(&created_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&pushed_) -
        reinterpret_cast<char*>(&created_)) + sizeof(pushed_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Event::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ezmq.Event)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ezmq.Event.id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 created = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_created();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &created_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 modified = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_modified();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &modified_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 origin = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_origin();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &origin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 pushed = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_pushed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &pushed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string device = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_device()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->device().data(), static_cast<int>(this->device().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ezmq.Event.device");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ezmq.Reading reading = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_reading()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ezmq.Event)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ezmq.Event)
  return false;
#undef DO_
}

void Event::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ezmq.Event)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ezmq.Event.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // required int64 created = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->created(), output);
  }

  // required int64 modified = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->modified(), output);
  }

  // required int64 origin = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->origin(), output);
  }

  // required int64 pushed = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->pushed(), output);
  }

  // required string device = 6;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->device().data(), static_cast<int>(this->device().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ezmq.Event.device");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->device(), output);
  }

  // repeated .ezmq.Reading reading = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->reading_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->reading(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ezmq.Event)
}

::google::protobuf::uint8* Event::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ezmq.Event)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ezmq.Event.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // required int64 created = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->created(), target);
  }

  // required int64 modified = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->modified(), target);
  }

  // required int64 origin = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->origin(), target);
  }

  // required int64 pushed = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->pushed(), target);
  }

  // required string device = 6;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->device().data(), static_cast<int>(this->device().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ezmq.Event.device");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->device(), target);
  }

  // repeated .ezmq.Reading reading = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->reading_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, this->reading(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ezmq.Event)
  return target;
}

size_t Event::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ezmq.Event)
  size_t total_size = 0;

  if (has_id()) {
    // required string id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  if (has_device()) {
    // required string device = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->device());
  }

  if (has_created()) {
    // required int64 created = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->created());
  }

  if (has_modified()) {
    // required int64 modified = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->modified());
  }

  if (has_origin()) {
    // required int64 origin = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->origin());
  }

  if (has_pushed()) {
    // required int64 pushed = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->pushed());
  }

  return total_size;
}
size_t Event::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ezmq.Event)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000003f) ^ 0x0000003f) == 0) {  // All required fields are present.
    // required string id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());

    // required string device = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->device());

    // required int64 created = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->created());

    // required int64 modified = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->modified());

    // required int64 origin = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->origin());

    // required int64 pushed = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->pushed());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .ezmq.Reading reading = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->reading_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->reading(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Event::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ezmq.Event)
  GOOGLE_DCHECK_NE(&from, this);
  const Event* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Event>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ezmq.Event)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ezmq.Event)
    MergeFrom(*source);
  }
}

void Event::MergeFrom(const Event& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ezmq.Event)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  reading_.MergeFrom(from.reading_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_id();
      id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_device();
      device_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_);
    }
    if (cached_has_bits & 0x00000004u) {
      created_ = from.created_;
    }
    if (cached_has_bits & 0x00000008u) {
      modified_ = from.modified_;
    }
    if (cached_has_bits & 0x00000010u) {
      origin_ = from.origin_;
    }
    if (cached_has_bits & 0x00000020u) {
      pushed_ = from.pushed_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Event::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ezmq.Event)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Event::CopyFrom(const Event& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ezmq.Event)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Event::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003f) != 0x0000003f) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->reading())) return false;
  return true;
}

void Event::Swap(Event* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Event::InternalSwap(Event* other) {
  using std::swap;
  reading_.InternalSwap(&other->reading_);
  id_.Swap(&other->id_);
  device_.Swap(&other->device_);
  swap(created_, other->created_);
  swap(modified_, other->modified_);
  swap(origin_, other->origin_);
  swap(pushed_, other->pushed_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Event::GetMetadata() const {
  protobuf_Event_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Event_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Event

// required string id = 1;
bool Event::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Event::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void Event::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void Event::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
const ::std::string& Event::id() const {
  // @@protoc_insertion_point(field_get:ezmq.Event.id)
  return id_.GetNoArena();
}
void Event::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ezmq.Event.id)
}
#if LANG_CXX11
void Event::set_id(::std::string&& value) {
  set_has_id();
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ezmq.Event.id)
}
#endif
void Event::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ezmq.Event.id)
}
void Event::set_id(const char* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ezmq.Event.id)
}
::std::string* Event::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:ezmq.Event.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Event::release_id() {
  // @@protoc_insertion_point(field_release:ezmq.Event.id)
  clear_has_id();
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Event::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:ezmq.Event.id)
}

// required int64 created = 2;
bool Event::has_created() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Event::set_has_created() {
  _has_bits_[0] |= 0x00000004u;
}
void Event::clear_has_created() {
  _has_bits_[0] &= ~0x00000004u;
}
void Event::clear_created() {
  created_ = GOOGLE_LONGLONG(0);
  clear_has_created();
}
::google::protobuf::int64 Event::created() const {
  // @@protoc_insertion_point(field_get:ezmq.Event.created)
  return created_;
}
void Event::set_created(::google::protobuf::int64 value) {
  set_has_created();
  created_ = value;
  // @@protoc_insertion_point(field_set:ezmq.Event.created)
}

// required int64 modified = 3;
bool Event::has_modified() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Event::set_has_modified() {
  _has_bits_[0] |= 0x00000008u;
}
void Event::clear_has_modified() {
  _has_bits_[0] &= ~0x00000008u;
}
void Event::clear_modified() {
  modified_ = GOOGLE_LONGLONG(0);
  clear_has_modified();
}
::google::protobuf::int64 Event::modified() const {
  // @@protoc_insertion_point(field_get:ezmq.Event.modified)
  return modified_;
}
void Event::set_modified(::google::protobuf::int64 value) {
  set_has_modified();
  modified_ = value;
  // @@protoc_insertion_point(field_set:ezmq.Event.modified)
}

// required int64 origin = 4;
bool Event::has_origin() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Event::set_has_origin() {
  _has_bits_[0] |= 0x00000010u;
}
void Event::clear_has_origin() {
  _has_bits_[0] &= ~0x00000010u;
}
void Event::clear_origin() {
  origin_ = GOOGLE_LONGLONG(0);
  clear_has_origin();
}
::google::protobuf::int64 Event::origin() const {
  // @@protoc_insertion_point(field_get:ezmq.Event.origin)
  return origin_;
}
void Event::set_origin(::google::protobuf::int64 value) {
  set_has_origin();
  origin_ = value;
  // @@protoc_insertion_point(field_set:ezmq.Event.origin)
}

// required int64 pushed = 5;
bool Event::has_pushed() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void Event::set_has_pushed() {
  _has_bits_[0] |= 0x00000020u;
}
void Event::clear_has_pushed() {
  _has_bits_[0] &= ~0x00000020u;
}
void Event::clear_pushed() {
  pushed_ = GOOGLE_LONGLONG(0);
  clear_has_pushed();
}
::google::protobuf::int64 Event::pushed() const {
  // @@protoc_insertion_point(field_get:ezmq.Event.pushed)
  return pushed_;
}
void Event::set_pushed(::google::protobuf::int64 value) {
  set_has_pushed();
  pushed_ = value;
  // @@protoc_insertion_point(field_set:ezmq.Event.pushed)
}

// required string device = 6;
bool Event::has_device() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Event::set_has_device() {
  _has_bits_[0] |= 0x00000002u;
}
void Event::clear_has_device() {
  _has_bits_[0] &= ~0x00000002u;
}
void Event::clear_device() {
  device_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_device();
}
const ::std::string& Event::device() const {
  // @@protoc_insertion_point(field_get:ezmq.Event.device)
  return device_.GetNoArena();
}
void Event::set_device(const ::std::string& value) {
  set_has_device();
  device_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ezmq.Event.device)
}
#if LANG_CXX11
void Event::set_device(::std::string&& value) {
  set_has_device();
  device_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ezmq.Event.device)
}
#endif
void Event::set_device(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_device();
  device_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ezmq.Event.device)
}
void Event::set_device(const char* value, size_t size) {
  set_has_device();
  device_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ezmq.Event.device)
}
::std::string* Event::mutable_device() {
  set_has_device();
  // @@protoc_insertion_point(field_mutable:ezmq.Event.device)
  return device_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Event::release_device() {
  // @@protoc_insertion_point(field_release:ezmq.Event.device)
  clear_has_device();
  return device_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Event::set_allocated_device(::std::string* device) {
  if (device != NULL) {
    set_has_device();
  } else {
    clear_has_device();
  }
  device_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), device);
  // @@protoc_insertion_point(field_set_allocated:ezmq.Event.device)
}

// repeated .ezmq.Reading reading = 7;
int Event::reading_size() const {
  return reading_.size();
}
void Event::clear_reading() {
  reading_.Clear();
}
const ::ezmq::Reading& Event::reading(int index) const {
  // @@protoc_insertion_point(field_get:ezmq.Event.reading)
  return reading_.Get(index);
}
::ezmq::Reading* Event::mutable_reading(int index) {
  // @@protoc_insertion_point(field_mutable:ezmq.Event.reading)
  return reading_.Mutable(index);
}
::ezmq::Reading* Event::add_reading() {
  // @@protoc_insertion_point(field_add:ezmq.Event.reading)
  return reading_.Add();
}
::google::protobuf::RepeatedPtrField< ::ezmq::Reading >*
Event::mutable_reading() {
  // @@protoc_insertion_point(field_mutable_list:ezmq.Event.reading)
  return &reading_;
}
const ::google::protobuf::RepeatedPtrField< ::ezmq::Reading >&
Event::reading() const {
  // @@protoc_insertion_point(field_list:ezmq.Event.reading)
  return reading_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Reading::kIdFieldNumber;
const int Reading::kCreatedFieldNumber;
const int Reading::kModifiedFieldNumber;
const int Reading::kOriginFieldNumber;
const int Reading::kPushedFieldNumber;
const int Reading::kNameFieldNumber;
const int Reading::kValueFieldNumber;
const int Reading::kDeviceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Reading::Reading()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Event_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ezmq.Reading)
}
Reading::Reading(const Reading& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_value()) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  device_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_device()) {
    device_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_);
  }
  ::memcpy(&created_, &from.created_,
    static_cast<size_t>(reinterpret_cast<char*>(&pushed_) -
    reinterpret_cast<char*>(&created_)) + sizeof(pushed_));
  // @@protoc_insertion_point(copy_constructor:ezmq.Reading)
}

void Reading::SharedCtor() {
  _cached_size_ = 0;
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&created_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pushed_) -
      reinterpret_cast<char*>(&created_)) + sizeof(pushed_));
}

Reading::~Reading() {
  // @@protoc_insertion_point(destructor:ezmq.Reading)
  SharedDtor();
}

void Reading::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Reading::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Reading::descriptor() {
  protobuf_Event_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Event_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Reading& Reading::default_instance() {
  protobuf_Event_2eproto::InitDefaults();
  return *internal_default_instance();
}

Reading* Reading::New(::google::protobuf::Arena* arena) const {
  Reading* n = new Reading;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Reading::Clear() {
// @@protoc_insertion_point(message_clear_start:ezmq.Reading)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*id_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!value_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*value_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(!device_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*device_.UnsafeRawStringPointer())->clear();
    }
  }
  if (cached_has_bits & 240u) {
    ::memset(&created_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&pushed_) -
        reinterpret_cast<char*>(&created_)) + sizeof(pushed_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Reading::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ezmq.Reading)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ezmq.Reading.id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 created = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_created();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &created_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 modified = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_modified();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &modified_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 origin = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_origin();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &origin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 pushed = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_pushed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &pushed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string name = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ezmq.Reading.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string value = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->value().data(), static_cast<int>(this->value().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ezmq.Reading.value");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string device = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_device()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->device().data(), static_cast<int>(this->device().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ezmq.Reading.device");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ezmq.Reading)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ezmq.Reading)
  return false;
#undef DO_
}

void Reading::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ezmq.Reading)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ezmq.Reading.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // required int64 created = 2;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->created(), output);
  }

  // required int64 modified = 3;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->modified(), output);
  }

  // required int64 origin = 4;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->origin(), output);
  }

  // required int64 pushed = 5;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->pushed(), output);
  }

  // required string name = 6;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ezmq.Reading.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->name(), output);
  }

  // required string value = 7;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ezmq.Reading.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->value(), output);
  }

  // required string device = 8;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->device().data(), static_cast<int>(this->device().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ezmq.Reading.device");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->device(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ezmq.Reading)
}

::google::protobuf::uint8* Reading::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ezmq.Reading)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ezmq.Reading.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // required int64 created = 2;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->created(), target);
  }

  // required int64 modified = 3;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->modified(), target);
  }

  // required int64 origin = 4;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->origin(), target);
  }

  // required int64 pushed = 5;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->pushed(), target);
  }

  // required string name = 6;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ezmq.Reading.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->name(), target);
  }

  // required string value = 7;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ezmq.Reading.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->value(), target);
  }

  // required string device = 8;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->device().data(), static_cast<int>(this->device().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ezmq.Reading.device");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->device(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ezmq.Reading)
  return target;
}

size_t Reading::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ezmq.Reading)
  size_t total_size = 0;

  if (has_id()) {
    // required string id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  if (has_name()) {
    // required string name = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_value()) {
    // required string value = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  if (has_device()) {
    // required string device = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->device());
  }

  if (has_created()) {
    // required int64 created = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->created());
  }

  if (has_modified()) {
    // required int64 modified = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->modified());
  }

  if (has_origin()) {
    // required int64 origin = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->origin());
  }

  if (has_pushed()) {
    // required int64 pushed = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->pushed());
  }

  return total_size;
}
size_t Reading::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ezmq.Reading)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x000000ff) ^ 0x000000ff) == 0) {  // All required fields are present.
    // required string id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());

    // required string name = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required string value = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());

    // required string device = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->device());

    // required int64 created = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->created());

    // required int64 modified = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->modified());

    // required int64 origin = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->origin());

    // required int64 pushed = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->pushed());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Reading::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ezmq.Reading)
  GOOGLE_DCHECK_NE(&from, this);
  const Reading* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Reading>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ezmq.Reading)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ezmq.Reading)
    MergeFrom(*source);
  }
}

void Reading::MergeFrom(const Reading& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ezmq.Reading)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_id();
      id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_value();
      value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_device();
      device_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_);
    }
    if (cached_has_bits & 0x00000010u) {
      created_ = from.created_;
    }
    if (cached_has_bits & 0x00000020u) {
      modified_ = from.modified_;
    }
    if (cached_has_bits & 0x00000040u) {
      origin_ = from.origin_;
    }
    if (cached_has_bits & 0x00000080u) {
      pushed_ = from.pushed_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Reading::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ezmq.Reading)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Reading::CopyFrom(const Reading& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ezmq.Reading)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Reading::IsInitialized() const {
  if ((_has_bits_[0] & 0x000000ff) != 0x000000ff) return false;
  return true;
}

void Reading::Swap(Reading* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Reading::InternalSwap(Reading* other) {
  using std::swap;
  id_.Swap(&other->id_);
  name_.Swap(&other->name_);
  value_.Swap(&other->value_);
  device_.Swap(&other->device_);
  swap(created_, other->created_);
  swap(modified_, other->modified_);
  swap(origin_, other->origin_);
  swap(pushed_, other->pushed_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Reading::GetMetadata() const {
  protobuf_Event_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Event_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Reading

// required string id = 1;
bool Reading::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Reading::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void Reading::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void Reading::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
const ::std::string& Reading::id() const {
  // @@protoc_insertion_point(field_get:ezmq.Reading.id)
  return id_.GetNoArena();
}
void Reading::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ezmq.Reading.id)
}
#if LANG_CXX11
void Reading::set_id(::std::string&& value) {
  set_has_id();
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ezmq.Reading.id)
}
#endif
void Reading::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ezmq.Reading.id)
}
void Reading::set_id(const char* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ezmq.Reading.id)
}
::std::string* Reading::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:ezmq.Reading.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Reading::release_id() {
  // @@protoc_insertion_point(field_release:ezmq.Reading.id)
  clear_has_id();
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Reading::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:ezmq.Reading.id)
}

// required int64 created = 2;
bool Reading::has_created() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Reading::set_has_created() {
  _has_bits_[0] |= 0x00000010u;
}
void Reading::clear_has_created() {
  _has_bits_[0] &= ~0x00000010u;
}
void Reading::clear_created() {
  created_ = GOOGLE_LONGLONG(0);
  clear_has_created();
}
::google::protobuf::int64 Reading::created() const {
  // @@protoc_insertion_point(field_get:ezmq.Reading.created)
  return created_;
}
void Reading::set_created(::google::protobuf::int64 value) {
  set_has_created();
  created_ = value;
  // @@protoc_insertion_point(field_set:ezmq.Reading.created)
}

// required int64 modified = 3;
bool Reading::has_modified() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void Reading::set_has_modified() {
  _has_bits_[0] |= 0x00000020u;
}
void Reading::clear_has_modified() {
  _has_bits_[0] &= ~0x00000020u;
}
void Reading::clear_modified() {
  modified_ = GOOGLE_LONGLONG(0);
  clear_has_modified();
}
::google::protobuf::int64 Reading::modified() const {
  // @@protoc_insertion_point(field_get:ezmq.Reading.modified)
  return modified_;
}
void Reading::set_modified(::google::protobuf::int64 value) {
  set_has_modified();
  modified_ = value;
  // @@protoc_insertion_point(field_set:ezmq.Reading.modified)
}

// required int64 origin = 4;
bool Reading::has_origin() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void Reading::set_has_origin() {
  _has_bits_[0] |= 0x00000040u;
}
void Reading::clear_has_origin() {
  _has_bits_[0] &= ~0x00000040u;
}
void Reading::clear_origin() {
  origin_ = GOOGLE_LONGLONG(0);
  clear_has_origin();
}
::google::protobuf::int64 Reading::origin() const {
  // @@protoc_insertion_point(field_get:ezmq.Reading.origin)
  return origin_;
}
void Reading::set_origin(::google::protobuf::int64 value) {
  set_has_origin();
  origin_ = value;
  // @@protoc_insertion_point(field_set:ezmq.Reading.origin)
}

// required int64 pushed = 5;
bool Reading::has_pushed() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void Reading::set_has_pushed() {
  _has_bits_[0] |= 0x00000080u;
}
void Reading::clear_has_pushed() {
  _has_bits_[0] &= ~0x00000080u;
}
void Reading::clear_pushed() {
  pushed_ = GOOGLE_LONGLONG(0);
  clear_has_pushed();
}
::google::protobuf::int64 Reading::pushed() const {
  // @@protoc_insertion_point(field_get:ezmq.Reading.pushed)
  return pushed_;
}
void Reading::set_pushed(::google::protobuf::int64 value) {
  set_has_pushed();
  pushed_ = value;
  // @@protoc_insertion_point(field_set:ezmq.Reading.pushed)
}

// required string name = 6;
bool Reading::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Reading::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
void Reading::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
void Reading::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& Reading::name() const {
  // @@protoc_insertion_point(field_get:ezmq.Reading.name)
  return name_.GetNoArena();
}
void Reading::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ezmq.Reading.name)
}
#if LANG_CXX11
void Reading::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ezmq.Reading.name)
}
#endif
void Reading::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ezmq.Reading.name)
}
void Reading::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ezmq.Reading.name)
}
::std::string* Reading::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:ezmq.Reading.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Reading::release_name() {
  // @@protoc_insertion_point(field_release:ezmq.Reading.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Reading::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ezmq.Reading.name)
}

// required string value = 7;
bool Reading::has_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Reading::set_has_value() {
  _has_bits_[0] |= 0x00000004u;
}
void Reading::clear_has_value() {
  _has_bits_[0] &= ~0x00000004u;
}
void Reading::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
const ::std::string& Reading::value() const {
  // @@protoc_insertion_point(field_get:ezmq.Reading.value)
  return value_.GetNoArena();
}
void Reading::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ezmq.Reading.value)
}
#if LANG_CXX11
void Reading::set_value(::std::string&& value) {
  set_has_value();
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ezmq.Reading.value)
}
#endif
void Reading::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ezmq.Reading.value)
}
void Reading::set_value(const char* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ezmq.Reading.value)
}
::std::string* Reading::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:ezmq.Reading.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Reading::release_value() {
  // @@protoc_insertion_point(field_release:ezmq.Reading.value)
  clear_has_value();
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Reading::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:ezmq.Reading.value)
}

// required string device = 8;
bool Reading::has_device() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Reading::set_has_device() {
  _has_bits_[0] |= 0x00000008u;
}
void Reading::clear_has_device() {
  _has_bits_[0] &= ~0x00000008u;
}
void Reading::clear_device() {
  device_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_device();
}
const ::std::string& Reading::device() const {
  // @@protoc_insertion_point(field_get:ezmq.Reading.device)
  return device_.GetNoArena();
}
void Reading::set_device(const ::std::string& value) {
  set_has_device();
  device_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ezmq.Reading.device)
}
#if LANG_CXX11
void Reading::set_device(::std::string&& value) {
  set_has_device();
  device_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ezmq.Reading.device)
}
#endif
void Reading::set_device(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_device();
  device_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ezmq.Reading.device)
}
void Reading::set_device(const char* value, size_t size) {
  set_has_device();
  device_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ezmq.Reading.device)
}
::std::string* Reading::mutable_device() {
  set_has_device();
  // @@protoc_insertion_point(field_mutable:ezmq.Reading.device)
  return device_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Reading::release_device() {
  // @@protoc_insertion_point(field_release:ezmq.Reading.device)
  clear_has_device();
  return device_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Reading::set_allocated_device(::std::string* device) {
  if (device != NULL) {
    set_has_device();
  } else {
    clear_has_device();
  }
  device_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), device);
  // @@protoc_insertion_point(field_set_allocated:ezmq.Reading.device)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace ezmq

// @@protoc_insertion_point(global_scope)
