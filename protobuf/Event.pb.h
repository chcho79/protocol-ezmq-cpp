/*******************************************************************************
 * Copyright 2017 Samsung Electronics All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 *******************************************************************************/

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Event.proto

#ifndef PROTOBUF_Event_2eproto__INCLUDED
#define PROTOBUF_Event_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

#include "EZMQMessage.h"

namespace ezmq {
class Event;
class EventDefaultTypeInternal;
extern EventDefaultTypeInternal _Event_default_instance_;
class Reading;
class ReadingDefaultTypeInternal;
extern ReadingDefaultTypeInternal _Reading_default_instance_;
}  // namespace ezmq

namespace ezmq {

namespace protobuf_Event_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_Event_2eproto

// ===================================================================

//Inheriting the EZMQMessage [This change is specifically done for EZMQ Library]
class Event : public EZMQMessage, public ::google::protobuf::Message {
 public:
  Event();
  virtual ~Event();

  Event(const Event& from);

  inline Event& operator=(const Event& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Event(Event&& from) noexcept
    : Event() {
    *this = ::std::move(from);
  }

  inline Event& operator=(Event&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Event& default_instance();

  static inline const Event* internal_default_instance() {
    return reinterpret_cast<const Event*>(
               &_Event_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(Event* other);
  friend void swap(Event& a, Event& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Event* New() const PROTOBUF_FINAL { return New(NULL); }

  Event* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Event& from);
  void MergeFrom(const Event& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Event* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ezmq.Reading reading = 7;
  int reading_size() const;
  void clear_reading();
  static const int kReadingFieldNumber = 7;
  const ::ezmq::Reading& reading(int index) const;
  ::ezmq::Reading* mutable_reading(int index);
  ::ezmq::Reading* add_reading();
  ::google::protobuf::RepeatedPtrField< ::ezmq::Reading >*
      mutable_reading();
  const ::google::protobuf::RepeatedPtrField< ::ezmq::Reading >&
      reading() const;

  // required string id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // required string device = 6;
  bool has_device() const;
  void clear_device();
  static const int kDeviceFieldNumber = 6;
  const ::std::string& device() const;
  void set_device(const ::std::string& value);
  #if LANG_CXX11
  void set_device(::std::string&& value);
  #endif
  void set_device(const char* value);
  void set_device(const char* value, size_t size);
  ::std::string* mutable_device();
  ::std::string* release_device();
  void set_allocated_device(::std::string* device);

  // required int64 created = 2;
  bool has_created() const;
  void clear_created();
  static const int kCreatedFieldNumber = 2;
  ::google::protobuf::int64 created() const;
  void set_created(::google::protobuf::int64 value);

  // required int64 modified = 3;
  bool has_modified() const;
  void clear_modified();
  static const int kModifiedFieldNumber = 3;
  ::google::protobuf::int64 modified() const;
  void set_modified(::google::protobuf::int64 value);

  // required int64 origin = 4;
  bool has_origin() const;
  void clear_origin();
  static const int kOriginFieldNumber = 4;
  ::google::protobuf::int64 origin() const;
  void set_origin(::google::protobuf::int64 value);

  // required int64 pushed = 5;
  bool has_pushed() const;
  void clear_pushed();
  static const int kPushedFieldNumber = 5;
  ::google::protobuf::int64 pushed() const;
  void set_pushed(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:ezmq.Event)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_created();
  void clear_has_created();
  void set_has_modified();
  void clear_has_modified();
  void set_has_origin();
  void clear_has_origin();
  void set_has_pushed();
  void clear_has_pushed();
  void set_has_device();
  void clear_has_device();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ezmq::Reading > reading_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::internal::ArenaStringPtr device_;
  ::google::protobuf::int64 created_;
  ::google::protobuf::int64 modified_;
  ::google::protobuf::int64 origin_;
  ::google::protobuf::int64 pushed_;
  friend struct protobuf_Event_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Reading : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ezmq.Reading) */ {
 public:
  Reading();
  virtual ~Reading();

  Reading(const Reading& from);

  inline Reading& operator=(const Reading& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Reading(Reading&& from) noexcept
    : Reading() {
    *this = ::std::move(from);
  }

  inline Reading& operator=(Reading&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Reading& default_instance();

  static inline const Reading* internal_default_instance() {
    return reinterpret_cast<const Reading*>(
               &_Reading_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(Reading* other);
  friend void swap(Reading& a, Reading& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Reading* New() const PROTOBUF_FINAL { return New(NULL); }

  Reading* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Reading& from);
  void MergeFrom(const Reading& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Reading* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // required string name = 6;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 6;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // required string value = 7;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 7;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // required string device = 8;
  bool has_device() const;
  void clear_device();
  static const int kDeviceFieldNumber = 8;
  const ::std::string& device() const;
  void set_device(const ::std::string& value);
  #if LANG_CXX11
  void set_device(::std::string&& value);
  #endif
  void set_device(const char* value);
  void set_device(const char* value, size_t size);
  ::std::string* mutable_device();
  ::std::string* release_device();
  void set_allocated_device(::std::string* device);

  // required int64 created = 2;
  bool has_created() const;
  void clear_created();
  static const int kCreatedFieldNumber = 2;
  ::google::protobuf::int64 created() const;
  void set_created(::google::protobuf::int64 value);

  // required int64 modified = 3;
  bool has_modified() const;
  void clear_modified();
  static const int kModifiedFieldNumber = 3;
  ::google::protobuf::int64 modified() const;
  void set_modified(::google::protobuf::int64 value);

  // required int64 origin = 4;
  bool has_origin() const;
  void clear_origin();
  static const int kOriginFieldNumber = 4;
  ::google::protobuf::int64 origin() const;
  void set_origin(::google::protobuf::int64 value);

  // required int64 pushed = 5;
  bool has_pushed() const;
  void clear_pushed();
  static const int kPushedFieldNumber = 5;
  ::google::protobuf::int64 pushed() const;
  void set_pushed(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:ezmq.Reading)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_created();
  void clear_has_created();
  void set_has_modified();
  void clear_has_modified();
  void set_has_origin();
  void clear_has_origin();
  void set_has_pushed();
  void clear_has_pushed();
  void set_has_name();
  void clear_has_name();
  void set_has_value();
  void clear_has_value();
  void set_has_device();
  void clear_has_device();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  ::google::protobuf::internal::ArenaStringPtr device_;
  ::google::protobuf::int64 created_;
  ::google::protobuf::int64 modified_;
  ::google::protobuf::int64 origin_;
  ::google::protobuf::int64 pushed_;
  friend struct protobuf_Event_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Event

// required string id = 1;
inline bool Event::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Event::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Event::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Event::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
inline const ::std::string& Event::id() const {
  // @@protoc_insertion_point(field_get:ezmq.Event.id)
  return id_.GetNoArena();
}
inline void Event::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ezmq.Event.id)
}
#if LANG_CXX11
inline void Event::set_id(::std::string&& value) {
  set_has_id();
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ezmq.Event.id)
}
#endif
inline void Event::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ezmq.Event.id)
}
inline void Event::set_id(const char* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ezmq.Event.id)
}
inline ::std::string* Event::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:ezmq.Event.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Event::release_id() {
  // @@protoc_insertion_point(field_release:ezmq.Event.id)
  clear_has_id();
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Event::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:ezmq.Event.id)
}

// required int64 created = 2;
inline bool Event::has_created() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Event::set_has_created() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Event::clear_has_created() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Event::clear_created() {
  created_ = GOOGLE_LONGLONG(0);
  clear_has_created();
}
inline ::google::protobuf::int64 Event::created() const {
  // @@protoc_insertion_point(field_get:ezmq.Event.created)
  return created_;
}
inline void Event::set_created(::google::protobuf::int64 value) {
  set_has_created();
  created_ = value;
  // @@protoc_insertion_point(field_set:ezmq.Event.created)
}

// required int64 modified = 3;
inline bool Event::has_modified() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Event::set_has_modified() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Event::clear_has_modified() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Event::clear_modified() {
  modified_ = GOOGLE_LONGLONG(0);
  clear_has_modified();
}
inline ::google::protobuf::int64 Event::modified() const {
  // @@protoc_insertion_point(field_get:ezmq.Event.modified)
  return modified_;
}
inline void Event::set_modified(::google::protobuf::int64 value) {
  set_has_modified();
  modified_ = value;
  // @@protoc_insertion_point(field_set:ezmq.Event.modified)
}

// required int64 origin = 4;
inline bool Event::has_origin() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Event::set_has_origin() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Event::clear_has_origin() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Event::clear_origin() {
  origin_ = GOOGLE_LONGLONG(0);
  clear_has_origin();
}
inline ::google::protobuf::int64 Event::origin() const {
  // @@protoc_insertion_point(field_get:ezmq.Event.origin)
  return origin_;
}
inline void Event::set_origin(::google::protobuf::int64 value) {
  set_has_origin();
  origin_ = value;
  // @@protoc_insertion_point(field_set:ezmq.Event.origin)
}

// required int64 pushed = 5;
inline bool Event::has_pushed() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Event::set_has_pushed() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Event::clear_has_pushed() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Event::clear_pushed() {
  pushed_ = GOOGLE_LONGLONG(0);
  clear_has_pushed();
}
inline ::google::protobuf::int64 Event::pushed() const {
  // @@protoc_insertion_point(field_get:ezmq.Event.pushed)
  return pushed_;
}
inline void Event::set_pushed(::google::protobuf::int64 value) {
  set_has_pushed();
  pushed_ = value;
  // @@protoc_insertion_point(field_set:ezmq.Event.pushed)
}

// required string device = 6;
inline bool Event::has_device() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Event::set_has_device() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Event::clear_has_device() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Event::clear_device() {
  device_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_device();
}
inline const ::std::string& Event::device() const {
  // @@protoc_insertion_point(field_get:ezmq.Event.device)
  return device_.GetNoArena();
}
inline void Event::set_device(const ::std::string& value) {
  set_has_device();
  device_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ezmq.Event.device)
}
#if LANG_CXX11
inline void Event::set_device(::std::string&& value) {
  set_has_device();
  device_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ezmq.Event.device)
}
#endif
inline void Event::set_device(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_device();
  device_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ezmq.Event.device)
}
inline void Event::set_device(const char* value, size_t size) {
  set_has_device();
  device_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ezmq.Event.device)
}
inline ::std::string* Event::mutable_device() {
  set_has_device();
  // @@protoc_insertion_point(field_mutable:ezmq.Event.device)
  return device_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Event::release_device() {
  // @@protoc_insertion_point(field_release:ezmq.Event.device)
  clear_has_device();
  return device_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Event::set_allocated_device(::std::string* device) {
  if (device != NULL) {
    set_has_device();
  } else {
    clear_has_device();
  }
  device_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), device);
  // @@protoc_insertion_point(field_set_allocated:ezmq.Event.device)
}

// repeated .ezmq.Reading reading = 7;
inline int Event::reading_size() const {
  return reading_.size();
}
inline void Event::clear_reading() {
  reading_.Clear();
}
inline const ::ezmq::Reading& Event::reading(int index) const {
  // @@protoc_insertion_point(field_get:ezmq.Event.reading)
  return reading_.Get(index);
}
inline ::ezmq::Reading* Event::mutable_reading(int index) {
  // @@protoc_insertion_point(field_mutable:ezmq.Event.reading)
  return reading_.Mutable(index);
}
inline ::ezmq::Reading* Event::add_reading() {
  // @@protoc_insertion_point(field_add:ezmq.Event.reading)
  return reading_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ezmq::Reading >*
Event::mutable_reading() {
  // @@protoc_insertion_point(field_mutable_list:ezmq.Event.reading)
  return &reading_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ezmq::Reading >&
Event::reading() const {
  // @@protoc_insertion_point(field_list:ezmq.Event.reading)
  return reading_;
}

// -------------------------------------------------------------------

// Reading

// required string id = 1;
inline bool Reading::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Reading::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Reading::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Reading::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
inline const ::std::string& Reading::id() const {
  // @@protoc_insertion_point(field_get:ezmq.Reading.id)
  return id_.GetNoArena();
}
inline void Reading::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ezmq.Reading.id)
}
#if LANG_CXX11
inline void Reading::set_id(::std::string&& value) {
  set_has_id();
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ezmq.Reading.id)
}
#endif
inline void Reading::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ezmq.Reading.id)
}
inline void Reading::set_id(const char* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ezmq.Reading.id)
}
inline ::std::string* Reading::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:ezmq.Reading.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Reading::release_id() {
  // @@protoc_insertion_point(field_release:ezmq.Reading.id)
  clear_has_id();
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Reading::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:ezmq.Reading.id)
}

// required int64 created = 2;
inline bool Reading::has_created() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Reading::set_has_created() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Reading::clear_has_created() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Reading::clear_created() {
  created_ = GOOGLE_LONGLONG(0);
  clear_has_created();
}
inline ::google::protobuf::int64 Reading::created() const {
  // @@protoc_insertion_point(field_get:ezmq.Reading.created)
  return created_;
}
inline void Reading::set_created(::google::protobuf::int64 value) {
  set_has_created();
  created_ = value;
  // @@protoc_insertion_point(field_set:ezmq.Reading.created)
}

// required int64 modified = 3;
inline bool Reading::has_modified() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Reading::set_has_modified() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Reading::clear_has_modified() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Reading::clear_modified() {
  modified_ = GOOGLE_LONGLONG(0);
  clear_has_modified();
}
inline ::google::protobuf::int64 Reading::modified() const {
  // @@protoc_insertion_point(field_get:ezmq.Reading.modified)
  return modified_;
}
inline void Reading::set_modified(::google::protobuf::int64 value) {
  set_has_modified();
  modified_ = value;
  // @@protoc_insertion_point(field_set:ezmq.Reading.modified)
}

// required int64 origin = 4;
inline bool Reading::has_origin() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Reading::set_has_origin() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Reading::clear_has_origin() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Reading::clear_origin() {
  origin_ = GOOGLE_LONGLONG(0);
  clear_has_origin();
}
inline ::google::protobuf::int64 Reading::origin() const {
  // @@protoc_insertion_point(field_get:ezmq.Reading.origin)
  return origin_;
}
inline void Reading::set_origin(::google::protobuf::int64 value) {
  set_has_origin();
  origin_ = value;
  // @@protoc_insertion_point(field_set:ezmq.Reading.origin)
}

// required int64 pushed = 5;
inline bool Reading::has_pushed() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Reading::set_has_pushed() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Reading::clear_has_pushed() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Reading::clear_pushed() {
  pushed_ = GOOGLE_LONGLONG(0);
  clear_has_pushed();
}
inline ::google::protobuf::int64 Reading::pushed() const {
  // @@protoc_insertion_point(field_get:ezmq.Reading.pushed)
  return pushed_;
}
inline void Reading::set_pushed(::google::protobuf::int64 value) {
  set_has_pushed();
  pushed_ = value;
  // @@protoc_insertion_point(field_set:ezmq.Reading.pushed)
}

// required string name = 6;
inline bool Reading::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Reading::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Reading::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Reading::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& Reading::name() const {
  // @@protoc_insertion_point(field_get:ezmq.Reading.name)
  return name_.GetNoArena();
}
inline void Reading::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ezmq.Reading.name)
}
#if LANG_CXX11
inline void Reading::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ezmq.Reading.name)
}
#endif
inline void Reading::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ezmq.Reading.name)
}
inline void Reading::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ezmq.Reading.name)
}
inline ::std::string* Reading::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:ezmq.Reading.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Reading::release_name() {
  // @@protoc_insertion_point(field_release:ezmq.Reading.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Reading::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ezmq.Reading.name)
}

// required string value = 7;
inline bool Reading::has_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Reading::set_has_value() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Reading::clear_has_value() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Reading::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
inline const ::std::string& Reading::value() const {
  // @@protoc_insertion_point(field_get:ezmq.Reading.value)
  return value_.GetNoArena();
}
inline void Reading::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ezmq.Reading.value)
}
#if LANG_CXX11
inline void Reading::set_value(::std::string&& value) {
  set_has_value();
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ezmq.Reading.value)
}
#endif
inline void Reading::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ezmq.Reading.value)
}
inline void Reading::set_value(const char* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ezmq.Reading.value)
}
inline ::std::string* Reading::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:ezmq.Reading.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Reading::release_value() {
  // @@protoc_insertion_point(field_release:ezmq.Reading.value)
  clear_has_value();
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Reading::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:ezmq.Reading.value)
}

// required string device = 8;
inline bool Reading::has_device() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Reading::set_has_device() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Reading::clear_has_device() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Reading::clear_device() {
  device_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_device();
}
inline const ::std::string& Reading::device() const {
  // @@protoc_insertion_point(field_get:ezmq.Reading.device)
  return device_.GetNoArena();
}
inline void Reading::set_device(const ::std::string& value) {
  set_has_device();
  device_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ezmq.Reading.device)
}
#if LANG_CXX11
inline void Reading::set_device(::std::string&& value) {
  set_has_device();
  device_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ezmq.Reading.device)
}
#endif
inline void Reading::set_device(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_device();
  device_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ezmq.Reading.device)
}
inline void Reading::set_device(const char* value, size_t size) {
  set_has_device();
  device_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ezmq.Reading.device)
}
inline ::std::string* Reading::mutable_device() {
  set_has_device();
  // @@protoc_insertion_point(field_mutable:ezmq.Reading.device)
  return device_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Reading::release_device() {
  // @@protoc_insertion_point(field_release:ezmq.Reading.device)
  clear_has_device();
  return device_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Reading::set_allocated_device(::std::string* device) {
  if (device != NULL) {
    set_has_device();
  } else {
    clear_has_device();
  }
  device_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), device);
  // @@protoc_insertion_point(field_set_allocated:ezmq.Reading.device)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace ezmq

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Event_2eproto__INCLUDED
